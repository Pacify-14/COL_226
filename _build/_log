### Starting build.
# Target: /home/soumodeep/.opam/5.0.0/bin/ocamlc.opt -config, tags: {  }
/home/soumodeep/.opam/5.0.0/bin/ocamlc.opt -config
# Target: main.ml.depends, tags: { extension:ml, file:main.ml, ocaml, ocamldep, quiet }
/home/soumodeep/.opam/5.0.0/bin/ocamldep.opt -modules main.ml > main.ml.depends
# Target: ast.ml.depends, tags: { extension:ml, file:ast.ml, ocaml, ocamldep, quiet }
/home/soumodeep/.opam/5.0.0/bin/ocamldep.opt -modules ast.ml > ast.ml.depends # cached
# Target: ast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, quiet }
/home/soumodeep/.opam/5.0.0/bin/ocamlc.opt -c -o ast.cmo ast.ml # cached
# Target: lexer.mll, tags: { extension:mll, file:lexer.mll, lexer, ocaml, ocamllex, quiet }
/home/soumodeep/.opam/5.0.0/bin/ocamllex.opt -q lexer.mll # cached
# Target: lexer.ml.depends, tags: { extension:ml, file:lexer.ml, ocaml, ocamldep, quiet }
/home/soumodeep/.opam/5.0.0/bin/ocamldep.opt -modules lexer.ml > lexer.ml.depends # cached
# Target: parser.mly, tags: { extension:mly, file:parser.mly, infer, ocaml, ocamlyacc, parser, quiet }
/home/soumodeep/.opam/5.0.0/bin/ocamlyacc parser.mly # cached
# Target: parser.mli.depends, tags: { extension:mli, file:parser.mli, ocaml, ocamldep, quiet }
/home/soumodeep/.opam/5.0.0/bin/ocamldep.opt -modules parser.mli > parser.mli.depends # cached
# Target: parser.cmi, tags: { byte, compile, extension:mli, file:parser.mli, interf, ocaml, quiet }
/home/soumodeep/.opam/5.0.0/bin/ocamlc.opt -c -o parser.cmi parser.mli # cached
# Target: lexer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:lexer.cmo, file:lexer.ml, implem, ocaml, quiet }
/home/soumodeep/.opam/5.0.0/bin/ocamlc.opt -c -o lexer.cmo lexer.ml # cached
# Target: main.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet }
/home/soumodeep/.opam/5.0.0/bin/ocamlc.opt -c -o main.cmo main.ml
+ /home/soumodeep/.opam/5.0.0/bin/ocamlc.opt -c -o main.cmo main.ml
File "main.ml", line 178, characters 4-30:
178 |   | Ast.WhileLoop (cond, body) ->
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning 11 [redundant-case]: this match case is unused.
File "main.ml", line 189, characters 4-28:
189 |   | Ast.ForLoop (_, _, _, _) ->
          ^^^^^^^^^^^^^^^^^^^^^^^^
Warning 11 [redundant-case]: this match case is unused.
File "main.ml", line 192, characters 4-5:
192 |   | _ ->
          ^
Warning 11 [redundant-case]: this match case is unused.
File "main.ml", lines 84-194, characters 2-48:
 84 | ..match e with
 85 |   | Ast.Int _ | Ast.Float _ | Ast.Bool _ | Ast.String _ ->
 86 |       failwith "Does not step further"
 87 |   | Ast.Paren e ->
 88 |     if is_val e then e
...
191 | 
192 |   | _ ->
193 |       Printf.printf "Unhandled expression type: %s\n" (string_of_expr e);
194 |       failwith "Unhandled case in step function"
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
Assign
  ((Int _|Float _|String _|Binop (_, _, _)|Inp _|Print _|Assign (_, _)|
   Bool _|Boolop (_, _, _)|IfElse (_, _, _)|Func (_, _)|Paren _|Block _|
   WhileLoop (_, _)|ForLoop (_, _, _, _)|Vector _|Matrix _|Transpose _|
   Det _|Dim1 _|Dim2 _|VecDim _|Vec_ix (_, _)),
  _)
File "main.ml", lines 221-224, characters 2-56:
221 | ..match boolop, v1 ,v2 with
222 |   | Ast.Or, Ast.Bool a, Ast.Bool b  -> Ast.Bool (a || b)
223 |   | Ast.Not, Ast.Bool a,Bool b -> Ast.Bool(not a)
224 |   | Ast.And, Ast.Bool a, Ast.Bool b -> Ast.Bool (a && b)
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Or, Bool _,
(Int _|Float _|String _|Binop (_, _, _)|Inp _|Print _|Assign (_, _)|
Boolop (_, _, _)|IfElse (_, _, _)|Var _|Func (_, _)|Paren _|Block _|
WhileLoop (_, _)|ForLoop (_, _, _, _)|Vector _|Matrix _|Transpose _|Det _|
Dim1 _|Dim2 _|VecDim _|Vec_ix (_, _)))
# Target: ast.cmx, tags: { compile, extension:cmx, extension:ml, file:ast.cmx, file:ast.ml, implem, native, ocaml, quiet }
/home/soumodeep/.opam/5.0.0/bin/ocamlopt.opt -c -o ast.cmx ast.ml # cached
# Target: parser.ml.depends, tags: { extension:ml, file:parser.ml, ocaml, ocamldep, quiet }
/home/soumodeep/.opam/5.0.0/bin/ocamldep.opt -modules parser.ml > parser.ml.depends # cached
# Target: parser.cmx, tags: { compile, extension:cmx, extension:ml, file:parser.cmx, file:parser.ml, implem, native, ocaml, quiet }
/home/soumodeep/.opam/5.0.0/bin/ocamlopt.opt -c -o parser.cmx parser.ml # cached
# Target: lexer.cmx, tags: { compile, extension:cmx, extension:ml, file:lexer.cmx, file:lexer.ml, implem, native, ocaml, quiet }
/home/soumodeep/.opam/5.0.0/bin/ocamlopt.opt -c -o lexer.cmx lexer.ml # cached
# Target: main.cmx, tags: { compile, extension:cmx, extension:ml, file:main.cmx, file:main.ml, implem, native, ocaml, quiet }
/home/soumodeep/.opam/5.0.0/bin/ocamlopt.opt -c -o main.cmx main.ml
+ /home/soumodeep/.opam/5.0.0/bin/ocamlopt.opt -c -o main.cmx main.ml
File "main.ml", line 178, characters 4-30:
178 |   | Ast.WhileLoop (cond, body) ->
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning 11 [redundant-case]: this match case is unused.
File "main.ml", line 189, characters 4-28:
189 |   | Ast.ForLoop (_, _, _, _) ->
          ^^^^^^^^^^^^^^^^^^^^^^^^
Warning 11 [redundant-case]: this match case is unused.
File "main.ml", line 192, characters 4-5:
192 |   | _ ->
          ^
Warning 11 [redundant-case]: this match case is unused.
File "main.ml", lines 84-194, characters 2-48:
 84 | ..match e with
 85 |   | Ast.Int _ | Ast.Float _ | Ast.Bool _ | Ast.String _ ->
 86 |       failwith "Does not step further"
 87 |   | Ast.Paren e ->
 88 |     if is_val e then e
...
191 | 
192 |   | _ ->
193 |       Printf.printf "Unhandled expression type: %s\n" (string_of_expr e);
194 |       failwith "Unhandled case in step function"
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
Assign
  ((Int _|Float _|String _|Binop (_, _, _)|Inp _|Print _|Assign (_, _)|
   Bool _|Boolop (_, _, _)|IfElse (_, _, _)|Func (_, _)|Paren _|Block _|
   WhileLoop (_, _)|ForLoop (_, _, _, _)|Vector _|Matrix _|Transpose _|
   Det _|Dim1 _|Dim2 _|VecDim _|Vec_ix (_, _)),
  _)
File "main.ml", lines 221-224, characters 2-56:
221 | ..match boolop, v1 ,v2 with
222 |   | Ast.Or, Ast.Bool a, Ast.Bool b  -> Ast.Bool (a || b)
223 |   | Ast.Not, Ast.Bool a,Bool b -> Ast.Bool(not a)
224 |   | Ast.And, Ast.Bool a, Ast.Bool b -> Ast.Bool (a && b)
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Or, Bool _,
(Int _|Float _|String _|Binop (_, _, _)|Inp _|Print _|Assign (_, _)|
Boolop (_, _, _)|IfElse (_, _, _)|Var _|Func (_, _)|Paren _|Block _|
WhileLoop (_, _)|ForLoop (_, _, _, _)|Vector _|Matrix _|Transpose _|Det _|
Dim1 _|Dim2 _|VecDim _|Vec_ix (_, _)))
# Target: main.native, tags: { dont_link_with, extension:native, file:main.native, link, native, ocaml, program, quiet }
/home/soumodeep/.opam/5.0.0/bin/ocamlopt.opt ast.cmx parser.cmx lexer.cmx main.cmx -o main.native
# Compilation successful.
